{
	"info": {
		"_postman_id": "cebe0be1-cd47-46fe-95e5-034b77fefc8d",
		"name": "Pet Store API",
		"description": "API Pet Store adalah layanan contoh (sample API) yang digunakan untuk mempelajari dan menguji fitur HTTP request dalam pengembangan aplikasi.\n\nDokumentasi ini menyediakan berbagai endpoint yang memungkinkan pengguna melakukan operasi CRUD (Create, Read, Update, Delete) terhadap data **Pet**, **Store**, dan **User**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48438784",
		"_collection_link": "https://umarfaishall1945-907940.postman.co/workspace/Faishal-Umar's-Workspace~e58039ce-3aca-4209-888b-c93c6548dedf/collection/48438784-cebe0be1-cd47-46fe-95e5-034b77fefc8d?action=share&source=collection_link&creator=48438784"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "AddPet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Puppies\"\r\n  },\r\n  \"name\": \"Andri\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateWithForm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Acome",
									"type": "text"
								},
								{
									"key": "status",
									"value": "available",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "1",
									"description": "ID of pet that needs to be updated"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPetById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Puppies\"\r\n  },\r\n  \"name\": \"Hammer\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "FindByStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"sold\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=sold",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								},
								{
									"key": "status",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "status",
									"value": "available",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "api_key39",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoint API ini digunakan untuk mengelola pet (hewan peliharaan) seperti:\n\n- Menambah pet baru\n    \n- Mengupdate informasi pet\n    \n- Melihat data pet berdasar status (pending, available, sold)\n    \n- Melihat pet sesuai id\n    \n- Menghapus pet berdasar id"
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "GetInventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "PlaceOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 12,\r\n  \"quantity\": 5,\r\n  \"shipDate\": \"2025-10-16T04:18:11.600Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOrderById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/:storeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								":storeId"
							],
							"variable": [
								{
									"key": "storeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/:storeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								":storeId"
							],
							"variable": [
								{
									"key": "storeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoint API ini digunakan untuk mengelola pemesanan diantaranya:\n\n- Membuat pesanan hewan\n    \n- Mendapatkan info detail order\n    \n- Memeriksa jumlah stok\n    \n- Menghapus order"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "CreateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"sherlock66\");\r",
									"pm.environment.set(\"password\", \"holmes99\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.message);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"{{username}}\",\r\n  \"firstName\": \"sherlock\",\r\n  \"lastName\": \"holmes\",\r\n  \"email\": \"sherly@mail.com\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"081297483\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateUserWithArrayInput",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"username\": \"{{username}}\",\r\n        \"firstName\": \"sherlock\",\r\n        \"lastName\": \"holmes\",\r\n        \"email\": \"sherly@mail.com\",\r\n        \"password\": \"{{password}}\",\r\n        \"phone\": \"081297483\",\r\n        \"userStatus\": 0\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithArray",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateUserWithList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"username\": \"{{username}}\",\r\n        \"firstName\": \"sherlock\",\r\n        \"lastName\": \"holmes\",\r\n        \"email\": \"sherly@mail.com\",\r\n        \"password\": \"{{password}}\",\r\n        \"phone\": \"081297483\",\r\n        \"userStatus\": 0\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"TC002 - Login Sukses\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"});\r",
									"\r",
									"pm.test(\"TC002 - Succes Login\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username={{username}}&password={{password}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserByName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"{{username}}\",\r\n  \"firstName\": \"sherlock\",\r\n  \"lastName\": \"holmes\",\r\n  \"email\": \"sherly@mail.com\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"09123890\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogoutUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoint API ini digunakan untuk mengelola akun pengguna, diantaranya:\n\n- Membuat akun user secara tunggal atau banyak\n    \n- Login dan Logout user\n    \n- Update data user berdasar username\n    \n- Menghapus user"
		}
	]
}